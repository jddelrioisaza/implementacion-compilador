
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ACTUALIZAR ASIGNACION COMA CONSTANTE DENTRO DIFERENTE DIVISION ENTERO ENTONCES FINALIZAR FUERA HACER IDENTIFICADOR IMPAR INICIAR LLAMAR MAYOR MAYORI MENOR MENORI MIENTRAS MULTIPLICACION NUMERO PARENTESISD PARENTESISI PROCEDIMIENTO PUNTO PUNTOCOMA RESTA SI SINO SUMA VARIABLEprogram : blockblock : constDecl varDecl procDecl statementconstDecl : CONSTANTE constAssignmentList PUNTOCOMAconstDecl : emptyconstAssignmentList : IDENTIFICADOR ASIGNACION NUMEROconstAssignmentList : constAssignmentList COMA IDENTIFICADOR ASIGNACION NUMEROvarDecl : VARIABLE IDENTIFICADOR PUNTOCOMAvarDecl : emptyidentList : IDENTIFICADORidentList : identList COMA IDENTIFICADORprocDecl : procDecl PROCEDIMIENTO IDENTIFICADOR PUNTOCOMA block PUNTOCOMAprocDecl : emptystatement : IDENTIFICADOR ACTUALIZAR expressionstatement : LLAMAR IDENTIFICADORstatement : INICIAR statementList FINALIZARstatement : SI condition ENTONCES statementstatement : MIENTRAS condition HACER statementstatement : emptystatementList : statementstatementList : statementList PUNTOCOMA statementcondition : IMPAR expressioncondition : expression relation expressionrelation : ASIGNACIONrelation : DIFERENTErelation : MENORrelation : MAYORrelation : MENORIrelation : MAYORIexpression : termexpression : addingOperator termexpression : expression addingOperator termterm : factorterm : term multiplyingOperator factoraddingOperator : SUMAaddingOperator : RESTAmultiplyingOperator : MULTIPLICACIONmultiplyingOperator : DIVISIONfactor : IDENTIFICADORfactor : NUMEROfactor : PARENTESISI expression PARENTESISDempty : '
    
_lr_action_items = {'CONSTANTE':([0,46,],[4,4,]),'VARIABLE':([0,3,5,14,46,],[-41,7,-4,-3,-41,]),'PROCEDIMIENTO':([0,3,5,6,8,11,12,14,25,46,75,],[-41,-41,-4,-41,-8,18,-12,-3,-7,-41,-11,]),'IDENTIFICADOR':([0,3,4,5,6,7,8,11,12,14,15,18,20,21,22,23,25,29,34,37,39,40,43,46,49,50,52,53,54,55,56,57,58,59,60,61,62,65,75,],[-41,-41,10,-4,-41,13,-8,19,-12,-3,26,28,30,19,41,41,-7,41,41,41,-34,-35,41,-41,19,19,41,41,-23,-24,-25,-26,-27,-28,41,-36,-37,19,-11,]),'LLAMAR':([0,3,5,6,8,11,12,14,21,25,46,49,50,65,75,],[-41,-41,-4,-41,-8,20,-12,-3,20,-7,-41,20,20,20,-11,]),'INICIAR':([0,3,5,6,8,11,12,14,21,25,46,49,50,65,75,],[-41,-41,-4,-41,-8,21,-12,-3,21,-7,-41,21,21,21,-11,]),'SI':([0,3,5,6,8,11,12,14,21,25,46,49,50,65,75,],[-41,-41,-4,-41,-8,22,-12,-3,22,-7,-41,22,22,22,-11,]),'MIENTRAS':([0,3,5,6,8,11,12,14,21,25,46,49,50,65,75,],[-41,-41,-4,-41,-8,23,-12,-3,23,-7,-41,23,23,23,-11,]),'$end':([0,1,2,3,5,6,8,11,12,14,17,24,25,30,36,38,41,42,47,48,50,63,65,69,71,72,73,74,75,],[-41,0,-1,-41,-4,-41,-8,-41,-12,-3,-2,-18,-7,-14,-29,-32,-38,-39,-13,-15,-41,-30,-41,-16,-31,-33,-40,-17,-11,]),'PUNTOCOMA':([3,5,6,8,9,11,12,13,14,17,21,24,25,27,28,30,31,32,36,38,41,42,46,47,48,49,50,63,65,66,67,68,69,71,72,73,74,75,],[-41,-4,-41,-8,14,-41,-12,25,-3,-2,-41,-18,-7,-5,46,-14,49,-19,-29,-32,-38,-39,-41,-13,-15,-41,-41,-30,-41,-6,75,-20,-16,-31,-33,-40,-17,-11,]),'COMA':([9,27,66,],[15,-5,-6,]),'ASIGNACION':([10,26,35,36,38,41,42,63,71,72,73,],[16,45,54,-29,-32,-38,-39,-30,-31,-33,-40,]),'NUMERO':([16,22,23,29,34,37,39,40,43,45,52,53,54,55,56,57,58,59,60,61,62,],[27,42,42,42,42,42,-34,-35,42,66,42,42,-23,-24,-25,-26,-27,-28,42,-36,-37,]),'ACTUALIZAR':([19,],[29,]),'FINALIZAR':([21,24,30,31,32,36,38,41,42,47,48,49,50,63,65,68,69,71,72,73,74,],[-41,-18,-14,48,-19,-29,-32,-38,-39,-13,-15,-41,-41,-30,-41,-20,-16,-31,-33,-40,-17,]),'IMPAR':([22,23,],[34,34,]),'SUMA':([22,23,29,34,35,36,38,41,42,43,47,51,52,54,55,56,57,58,59,63,64,70,71,72,73,],[39,39,39,39,39,-29,-32,-38,-39,39,39,39,39,-23,-24,-25,-26,-27,-28,-30,39,39,-31,-33,-40,]),'RESTA':([22,23,29,34,35,36,38,41,42,43,47,51,52,54,55,56,57,58,59,63,64,70,71,72,73,],[40,40,40,40,40,-29,-32,-38,-39,40,40,40,40,-23,-24,-25,-26,-27,-28,-30,40,40,-31,-33,-40,]),'PARENTESISI':([22,23,29,34,37,39,40,43,52,53,54,55,56,57,58,59,60,61,62,],[43,43,43,43,43,-34,-35,43,43,43,-23,-24,-25,-26,-27,-28,43,-36,-37,]),'ENTONCES':([33,36,38,41,42,51,63,70,71,72,73,],[50,-29,-32,-38,-39,-21,-30,-22,-31,-33,-40,]),'DIFERENTE':([35,36,38,41,42,63,71,72,73,],[55,-29,-32,-38,-39,-30,-31,-33,-40,]),'MENOR':([35,36,38,41,42,63,71,72,73,],[56,-29,-32,-38,-39,-30,-31,-33,-40,]),'MAYOR':([35,36,38,41,42,63,71,72,73,],[57,-29,-32,-38,-39,-30,-31,-33,-40,]),'MENORI':([35,36,38,41,42,63,71,72,73,],[58,-29,-32,-38,-39,-30,-31,-33,-40,]),'MAYORI':([35,36,38,41,42,63,71,72,73,],[59,-29,-32,-38,-39,-30,-31,-33,-40,]),'HACER':([36,38,41,42,44,51,63,70,71,72,73,],[-29,-32,-38,-39,65,-21,-30,-22,-31,-33,-40,]),'PARENTESISD':([36,38,41,42,63,64,71,72,73,],[-29,-32,-38,-39,-30,73,-31,-33,-40,]),'MULTIPLICACION':([36,38,41,42,63,71,72,73,],[61,-32,-38,-39,61,61,-33,-40,]),'DIVISION':([36,38,41,42,63,71,72,73,],[62,-32,-38,-39,62,62,-33,-40,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'block':([0,46,],[2,67,]),'constDecl':([0,46,],[3,3,]),'empty':([0,3,6,11,21,46,49,50,65,],[5,8,12,24,24,5,24,24,24,]),'varDecl':([3,],[6,]),'constAssignmentList':([4,],[9,]),'procDecl':([6,],[11,]),'statement':([11,21,49,50,65,],[17,32,68,69,74,]),'statementList':([21,],[31,]),'condition':([22,23,],[33,44,]),'expression':([22,23,29,34,43,52,],[35,35,47,51,64,70,]),'term':([22,23,29,34,37,43,52,53,],[36,36,36,36,63,36,36,71,]),'addingOperator':([22,23,29,34,35,43,47,51,52,64,70,],[37,37,37,37,53,37,53,53,37,53,53,]),'factor':([22,23,29,34,37,43,52,53,60,],[38,38,38,38,38,38,38,38,72,]),'relation':([35,],[52,]),'multiplyingOperator':([36,63,71,],[60,60,60,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> block','program',1,'p_program','analizadorSintactico.py',23),
  ('block -> constDecl varDecl procDecl statement','block',4,'p_block','analizadorSintactico.py',29),
  ('constDecl -> CONSTANTE constAssignmentList PUNTOCOMA','constDecl',3,'p_constDecl','analizadorSintactico.py',33),
  ('constDecl -> empty','constDecl',1,'p_constDeclEmpty','analizadorSintactico.py',39),
  ('constAssignmentList -> IDENTIFICADOR ASIGNACION NUMERO','constAssignmentList',3,'p_constAssignmentListA','analizadorSintactico.py',45),
  ('constAssignmentList -> constAssignmentList COMA IDENTIFICADOR ASIGNACION NUMERO','constAssignmentList',5,'p_constAssignmentListB','analizadorSintactico.py',50),
  ('varDecl -> VARIABLE IDENTIFICADOR PUNTOCOMA','varDecl',3,'p_varDecl','analizadorSintactico.py',55),
  ('varDecl -> empty','varDecl',1,'p_varDeclEmpty','analizadorSintactico.py',60),
  ('identList -> IDENTIFICADOR','identList',1,'p_identListA','analizadorSintactico.py',65),
  ('identList -> identList COMA IDENTIFICADOR','identList',3,'p_identListB','analizadorSintactico.py',70),
  ('procDecl -> procDecl PROCEDIMIENTO IDENTIFICADOR PUNTOCOMA block PUNTOCOMA','procDecl',6,'p_procDecl','analizadorSintactico.py',75),
  ('procDecl -> empty','procDecl',1,'p_procDeclEmpty','analizadorSintactico.py',80),
  ('statement -> IDENTIFICADOR ACTUALIZAR expression','statement',3,'p_statementA','analizadorSintactico.py',85),
  ('statement -> LLAMAR IDENTIFICADOR','statement',2,'p_statementB','analizadorSintactico.py',90),
  ('statement -> INICIAR statementList FINALIZAR','statement',3,'p_statementC','analizadorSintactico.py',95),
  ('statement -> SI condition ENTONCES statement','statement',4,'p_statementD','analizadorSintactico.py',100),
  ('statement -> MIENTRAS condition HACER statement','statement',4,'p_statementE','analizadorSintactico.py',105),
  ('statement -> empty','statement',1,'p_statementEmpty','analizadorSintactico.py',110),
  ('statementList -> statement','statementList',1,'p_statementListA','analizadorSintactico.py',115),
  ('statementList -> statementList PUNTOCOMA statement','statementList',3,'p_statementListB','analizadorSintactico.py',120),
  ('condition -> IMPAR expression','condition',2,'p_conditionA','analizadorSintactico.py',125),
  ('condition -> expression relation expression','condition',3,'p_conditionB','analizadorSintactico.py',130),
  ('relation -> ASIGNACION','relation',1,'p_relationA','analizadorSintactico.py',135),
  ('relation -> DIFERENTE','relation',1,'p_relationB','analizadorSintactico.py',140),
  ('relation -> MENOR','relation',1,'p_relationC','analizadorSintactico.py',145),
  ('relation -> MAYOR','relation',1,'p_relationD','analizadorSintactico.py',150),
  ('relation -> MENORI','relation',1,'p_relationE','analizadorSintactico.py',155),
  ('relation -> MAYORI','relation',1,'p_relationF','analizadorSintactico.py',160),
  ('expression -> term','expression',1,'p_expressionA','analizadorSintactico.py',165),
  ('expression -> addingOperator term','expression',2,'p_expressionB','analizadorSintactico.py',170),
  ('expression -> expression addingOperator term','expression',3,'p_expressionC','analizadorSintactico.py',175),
  ('term -> factor','term',1,'p_termA','analizadorSintactico.py',180),
  ('term -> term multiplyingOperator factor','term',3,'p_termB','analizadorSintactico.py',185),
  ('addingOperator -> SUMA','addingOperator',1,'p_addingOperatorA','analizadorSintactico.py',190),
  ('addingOperator -> RESTA','addingOperator',1,'p_addingOperatorB','analizadorSintactico.py',195),
  ('multiplyingOperator -> MULTIPLICACION','multiplyingOperator',1,'p_multiplyingOperatorA','analizadorSintactico.py',200),
  ('multiplyingOperator -> DIVISION','multiplyingOperator',1,'p_multiplyingOperatorB','analizadorSintactico.py',205),
  ('factor -> IDENTIFICADOR','factor',1,'p_factorA','analizadorSintactico.py',210),
  ('factor -> NUMERO','factor',1,'p_factorB','analizadorSintactico.py',215),
  ('factor -> PARENTESISI expression PARENTESISD','factor',3,'p_factorC','analizadorSintactico.py',220),
  ('empty -> <empty>','empty',0,'p_empty','analizadorSintactico.py',225),
]
